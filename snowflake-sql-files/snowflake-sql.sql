DESC INTEGRATION SNOW_S3;

CREATE STAGE IF NOT EXISTS SNOW_S3_STAGE
STORAGE_INTEGRATION = SNOW_S3
URL = 's3://stadiums-bucket/';

SELECT STADIUM,CAPACITY,CITY_STATE,COUNTRY,REGION,TENANTS,SPORTS FROM STADIUM_DATA;


-- CREATE NEW TABLE WITH STADIUM DATA RANKED BY CAPACITY --
CREATE TABLE STADIUM_DATA_RANK AS
SELECT 
    ROW_NUMBER() OVER (ORDER BY CAPACITY DESC) AS RANK,
    STADIUM, 
    CAPACITY, 
    CITY_STATE, 
    COUNTRY, 
    REGION, 
    TENANTS, 
    SPORTS, 
    IMAGE, 
    LOCATION
FROM 
    STADIUM_DATA
ORDER BY 
    CAPACITY DESC;

SELECT TOP 100 * FROM STADIUM_DATA_RANK;

-- DROP THE ORIGINAL TABLE SINCE IT'S NO LONGER NEEDED --
DROP TABLE STADIUM_DATA;

-- CREATE A NEW TABLE WITH SEPARATED TENANTS AND SPORTS --
CREATE OR REPLACE TABLE STADIUMS_SEPARATED AS
SELECT 
    RANK,
    STADIUM,
    CAPACITY,
    CITY_STATE,
    COUNTRY,
    REGION,
    IMAGE,
    LOCATION,
    TRIM(tenant.value::STRING) AS TENANT,
    TRIM(sport.value::STRING) AS SPORT
FROM STADIUM_DATA_RANK,
LATERAL FLATTEN(input => SPLIT(TENANTS, ',')) tenant,
LATERAL FLATTEN(input => SPLIT(SPORTS, ',')) sport;

SELECT * FROM STADIUMS_SEPARATED;


--- ANALYSIS QUERIES ---

-- TOP 10 STADIUMS BY CAPACITY --
SELECT TOP 10 
    RANK, 
    STADIUM, 
    CAPACITY, 
    REGION, 
    CITY_STATE, 
    SPORTS
FROM STADIUM_DATA_RANK
ORDER BY CAPACITY DESC;

-- AVERAGE CAPACITY BY REGION --
SELECT 
    REGION, 
    AVG(CAPACITY) AS AVG_CAPACITY
FROM STADIUM_DATA_RANK
GROUP BY REGION
ORDER BY AVG_CAPACITY DESC;

-- COUNT OF STADIUMS IN EACH COUNTRY --
SELECT 
    COUNTRY, 
    COUNT(COUNTRY) AS STADIUM_COUNT
FROM STADIUM_DATA_RANK
GROUP BY COUNTRY
ORDER BY STADIUM_COUNT DESC, COUNTRY ASC;

-- STADIUM RANKING WITHIN EACH REGION --
SELECT 
    RANK, 
    STADIUM, 
    REGION,
    ROW_NUMBER() OVER (PARTITION BY REGION ORDER BY CAPACITY DESC) AS REGION_RANK
FROM STADIUM_DATA_RANK;

-- TOP 3 STADIUM RANKING WITHIN EACH REGION --
SELECT 
    RANK, 
    STADIUM, 
    REGION, 
    CAPACITY, 
    REGION_RANK
FROM (
    SELECT 
        RANK, 
        STADIUM, 
        REGION, 
        CAPACITY,
        ROW_NUMBER() OVER (PARTITION BY REGION ORDER BY CAPACITY DESC) AS REGION_RANK
    FROM STADIUM_DATA_RANK
) RANKED_STADIUMS
WHERE REGION_RANK <= 3;

-- TOP 3 STADIUM RANKING WITHIN EACH REGION (WITH QUALIFY) --
SELECT 
    RANK, 
    STADIUM, 
    REGION, 
    CAPACITY
FROM STADIUM_DATA_RANK
QUALIFY ROW_NUMBER() OVER (PARTITION BY REGION ORDER BY CAPACITY DESC) <= 3;

-- STADIUMS WITH CAPACITY ABOVE AVERAGE --
SELECT 
    STADIUM, 
    T2.REGION, 
    CAPACITY, 
    AVG_CAPACITY
FROM STADIUM_DATA_RANK, 
     (SELECT REGION, AVG(CAPACITY) AS AVG_CAPACITY 
      FROM STADIUM_DATA_RANK 
      GROUP BY REGION) T2
WHERE T2.REGION = STADIUM_DATA_RANK.REGION
AND CAPACITY > AVG_CAPACITY
ORDER BY REGION;

-- STADIUMS WITH THE CLOSEST CAPACITY TO REGIONAL MEDIAN --
WITH MEDIAN_CTE AS (
    SELECT
        REGION, 
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY CAPACITY) OVER (PARTITION BY REGION) AS MEDIAN_CAPACITY
    FROM STADIUM_DATA_RANK
)
SELECT 
    RANK, 
    STADIUM, 
    REGION, 
    CAPACITY, 
    RANKED_STADIUMS.MEDIAN_RANK
FROM (
    SELECT
        S.RANK, 
        S.STADIUM, 
        S.REGION, 
        S.CAPACITY,
        ROW_NUMBER() OVER (PARTITION BY S.REGION ORDER BY ABS(S.CAPACITY - M.MEDIAN_CAPACITY)) AS MEDIAN_RANK
    FROM STADIUM_DATA_RANK S
    JOIN MEDIAN_CTE M ON S.REGION = M.REGION
) RANKED_STADIUMS
WHERE MEDIAN_RANK = 1;

-- COUNT OF STADIUMS BY SPORT --
SELECT 
    SPORT, 
    COUNT(*) AS NUMBER_OF_STADIUMS
FROM STADIUMS_SEPARATED
GROUP BY SPORT
ORDER BY NUMBER_OF_STADIUMS DESC;

-- STADIUMS WITH MULTIPLE TENANTS --
SELECT 
    STADIUM, 
    COUNT(DISTINCT TENANT) AS NUMBER_OF_TENANTS
FROM STADIUMS_SEPARATED
GROUP BY STADIUM
HAVING COUNT(DISTINCT TENANT) > 1
ORDER BY NUMBER_OF_TENANTS DESC;

-- AVERAGE CAPACITY BY SPORT --
SELECT 
    SPORT, 
    AVG(CAPACITY) AS AVG_CAPACITY 
FROM STADIUMS_SEPARATED 
GROUP BY SPORT
ORDER BY AVG_CAPACITY DESC;




